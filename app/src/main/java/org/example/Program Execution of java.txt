 1. Request Flow
   - Client sends an HTTP request to the server
   - The request is handled by a controller
   - The controller calls a service to process the request
   - The service interacts with a repository to fetch or store data
   - The repository communicates with the database to execute queries
   - Finally, the response is sent back through the controller to the client
HTTP Request → Controller → Service → Repository → Database


2. Authentication Flow
   - Client sends authentication credentials (e.g., username and password)
   - The request is handled by the AuthController
   - The AuthController calls the AuthService to validate credentials
   - The AuthService interacts with the UserRepository to check user details
   - If valid, a token is generated and sent back to the client
   - The flow can be represented as:
Client → AuthController → AuthService → UserRepository → Database

3. Data Flow
    - Request DTOs from `/request` are used to receive data from clients
    - This data is processed by services
    -Services use repositories to interact with database
    - Response DTOs from `/response` are used to send data back to clients


More Detailed view

flowchart LR
  A[Client] -->|POST /register| B(AuthenticationController.register)
  B --> C[AuthenticationService.register]
  C --> D[UserRepository.save(User)]
  D --> E[JwtService.generateToken(user)]
  E --> F[TokenRepository.save(Token{token, expiry,…})]
  F --> G[return AuthenticationResponse{accessToken, refreshToken}]
  G --> A

  A2[Client] -->|POST /authenticate| B2(AuthenticationController.authenticate)
  B2 --> C2[AuthenticationService.authenticate]
  C2 --> H[AuthenticationManager.authenticate()]
  H --> I[load UserDetails via UserDetailsService]
  I --> E2[JwtService.generateToken(user)]
  E2 --> F2[revokeOldTokens & save new Token]
  F2 --> G2[return AuthenticationResponse{…}]
  G2 --> A2

  A3[Client] -->|POST /refresh-token| B3(AuthenticationController.refreshToken)
  B3 --> J[extract refreshToken from header]
  J --> K[JwtService.validateToken(refreshToken)]
  K --> L[UserRepository.findByUsername]
  L --> E3[JwtService.generateToken(user)]
  E3 --> F3[save new Token & revoke previous]
  F3 --> G3[write new AccessToken to response body]
  G3 --> A3
